ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f767zi_usart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.usart2_default_init,"ax",%progbits
  19              		.align	1
  20              		.global	usart2_default_init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	usart2_default_init:
  26              	.LFB0:
  27              		.file 1 "./Src/stm32f767zi_usart.c"
   1:./Src/stm32f767zi_usart.c **** /**
   2:./Src/stm32f767zi_usart.c ****  * @file stm32f767zi_usart.c
   3:./Src/stm32f767zi_usart.c ****  * @author zheyi613 (zheyi880613@gmail.com)
   4:./Src/stm32f767zi_usart.c ****  * @brief usart/uart
   5:./Src/stm32f767zi_usart.c ****  * @date 2022-08-10
   6:./Src/stm32f767zi_usart.c ****  */
   7:./Src/stm32f767zi_usart.c **** 
   8:./Src/stm32f767zi_usart.c **** #include "stm32f767zi_usart.h"
   9:./Src/stm32f767zi_usart.c **** 
  10:./Src/stm32f767zi_usart.c **** void usart2_default_init(void)
  11:./Src/stm32f767zi_usart.c **** {
  28              		.loc 1 11 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  12:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  13:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
  40              		.loc 1 13 15
  41 0004 184B     		ldr	r3, .L2
  42 0006 1B6B     		ldr	r3, [r3, #48]
  43 0008 174A     		ldr	r2, .L2
  44 000a 43F00803 		orr	r3, r3, #8
  45 000e 1363     		str	r3, [r2, #48]
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 2


  14:./Src/stm32f767zi_usart.c **** 	// Set PD5 (Tx) mode to alternate function.
  15:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART2_TX_POS;
  46              		.loc 1 15 15
  47 0010 164B     		ldr	r3, .L2+4
  48 0012 1B68     		ldr	r3, [r3]
  49 0014 154A     		ldr	r2, .L2+4
  50 0016 43F40063 		orr	r3, r3, #2048
  51 001a 1360     		str	r3, [r2]
  16:./Src/stm32f767zi_usart.c **** 	// Set PD6 (Rx) mode to alternate function.
  17:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART2_RX_POS;
  52              		.loc 1 17 15
  53 001c 134B     		ldr	r3, .L2+4
  54 001e 1B68     		ldr	r3, [r3]
  55 0020 124A     		ldr	r2, .L2+4
  56 0022 43F40053 		orr	r3, r3, #8192
  57 0026 1360     		str	r3, [r2]
  18:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  19:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[0] |= (USART2_AF << 20) | (USART2_AF << 24);
  58              		.loc 1 19 16
  59 0028 104B     		ldr	r3, .L2+4
  60 002a 1B6A     		ldr	r3, [r3, #32]
  61 002c 0F4A     		ldr	r2, .L2+4
  62 002e 43F0EE63 		orr	r3, r3, #124780544
  63 0032 1362     		str	r3, [r2, #32]
  20:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  21:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART2_CLK_EN;
  64              		.loc 1 21 15
  65 0034 0C4B     		ldr	r3, .L2
  66 0036 1B6C     		ldr	r3, [r3, #64]
  67 0038 0B4A     		ldr	r2, .L2
  68 003a 43F40033 		orr	r3, r3, #131072
  69 003e 1364     		str	r3, [r2, #64]
  22:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  23:./Src/stm32f767zi_usart.c **** 	USART2->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS);
  70              		.loc 1 23 14
  71 0040 0B4B     		ldr	r3, .L2+8
  72 0042 1B68     		ldr	r3, [r3]
  73 0044 0A4A     		ldr	r2, .L2+8
  74 0046 43F00C03 		orr	r3, r3, #12
  75 004a 1360     		str	r3, [r2]
  24:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  25:./Src/stm32f767zi_usart.c **** 	USART2->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
  76              		.loc 1 25 8
  77 004c 084B     		ldr	r3, .L2+8
  78              		.loc 1 25 14
  79 004e 8B22     		movs	r2, #139
  80 0050 DA60     		str	r2, [r3, #12]
  26:./Src/stm32f767zi_usart.c **** 	// enable USART3
  27:./Src/stm32f767zi_usart.c **** 	USART2->CR1 |= 1U << USART_CR1_UE_POS;
  81              		.loc 1 27 14
  82 0052 074B     		ldr	r3, .L2+8
  83 0054 1B68     		ldr	r3, [r3]
  84 0056 064A     		ldr	r2, .L2+8
  85 0058 43F00103 		orr	r3, r3, #1
  86 005c 1360     		str	r3, [r2]
  28:./Src/stm32f767zi_usart.c **** }
  87              		.loc 1 28 1
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 3


  88 005e 00BF     		nop
  89 0060 BD46     		mov	sp, r7
  90              	.LCFI2:
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0062 5DF8047B 		ldr	r7, [sp], #4
  94              	.LCFI3:
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 0066 7047     		bx	lr
  98              	.L3:
  99              		.align	2
 100              	.L2:
 101 0068 00380240 		.word	1073887232
 102 006c 000C0240 		.word	1073875968
 103 0070 00440040 		.word	1073759232
 104              		.cfi_endproc
 105              	.LFE0:
 107              		.section	.text.usart3_default_init,"ax",%progbits
 108              		.align	1
 109              		.global	usart3_default_init
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	usart3_default_init:
 115              	.LFB1:
  29:./Src/stm32f767zi_usart.c **** 
  30:./Src/stm32f767zi_usart.c **** // word length: 8
  31:./Src/stm32f767zi_usart.c **** // transmit enable: enable
  32:./Src/stm32f767zi_usart.c **** // parity: none
  33:./Src/stm32f767zi_usart.c **** // stop bits: 1
  34:./Src/stm32f767zi_usart.c **** // baud rate: 115200
  35:./Src/stm32f767zi_usart.c **** void usart3_default_init(void)
  36:./Src/stm32f767zi_usart.c **** {
 116              		.loc 1 36 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              	.LCFI4:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 00AF     		add	r7, sp, #0
 126              	.LCFI5:
 127              		.cfi_def_cfa_register 7
  37:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  38:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
 128              		.loc 1 38 15
 129 0004 184B     		ldr	r3, .L5
 130 0006 1B6B     		ldr	r3, [r3, #48]
 131 0008 174A     		ldr	r2, .L5
 132 000a 43F00803 		orr	r3, r3, #8
 133 000e 1363     		str	r3, [r2, #48]
  39:./Src/stm32f767zi_usart.c **** 	// Set PD8 (Tx) mode to alternate function.
  40:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_TX_POS;
 134              		.loc 1 40 15
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 4


 135 0010 164B     		ldr	r3, .L5+4
 136 0012 1B68     		ldr	r3, [r3]
 137 0014 154A     		ldr	r2, .L5+4
 138 0016 43F40033 		orr	r3, r3, #131072
 139 001a 1360     		str	r3, [r2]
  41:./Src/stm32f767zi_usart.c **** 	// Set PD9 (Rx) mode to alternate function.
  42:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_RX_POS;
 140              		.loc 1 42 15
 141 001c 134B     		ldr	r3, .L5+4
 142 001e 1B68     		ldr	r3, [r3]
 143 0020 124A     		ldr	r2, .L5+4
 144 0022 43F40023 		orr	r3, r3, #524288
 145 0026 1360     		str	r3, [r2]
  43:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  44:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[1] |= (USART3_AF << 4) | USART3_AF;
 146              		.loc 1 44 16
 147 0028 104B     		ldr	r3, .L5+4
 148 002a 5B6A     		ldr	r3, [r3, #36]
 149 002c 0F4A     		ldr	r2, .L5+4
 150 002e 43F07703 		orr	r3, r3, #119
 151 0032 5362     		str	r3, [r2, #36]
  45:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  46:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART3_CLK_EN;
 152              		.loc 1 46 15
 153 0034 0C4B     		ldr	r3, .L5
 154 0036 1B6C     		ldr	r3, [r3, #64]
 155 0038 0B4A     		ldr	r2, .L5
 156 003a 43F48023 		orr	r3, r3, #262144
 157 003e 1364     		str	r3, [r2, #64]
  47:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  48:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS);
 158              		.loc 1 48 14
 159 0040 0B4B     		ldr	r3, .L5+8
 160 0042 1B68     		ldr	r3, [r3]
 161 0044 0A4A     		ldr	r2, .L5+8
 162 0046 43F00C03 		orr	r3, r3, #12
 163 004a 1360     		str	r3, [r2]
  49:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  50:./Src/stm32f767zi_usart.c **** 	USART3->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
 164              		.loc 1 50 8
 165 004c 084B     		ldr	r3, .L5+8
 166              		.loc 1 50 14
 167 004e 8B22     		movs	r2, #139
 168 0050 DA60     		str	r2, [r3, #12]
  51:./Src/stm32f767zi_usart.c **** 	// enable USART3
  52:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_UE_POS;
 169              		.loc 1 52 14
 170 0052 074B     		ldr	r3, .L5+8
 171 0054 1B68     		ldr	r3, [r3]
 172 0056 064A     		ldr	r2, .L5+8
 173 0058 43F00103 		orr	r3, r3, #1
 174 005c 1360     		str	r3, [r2]
  53:./Src/stm32f767zi_usart.c **** }
 175              		.loc 1 53 1
 176 005e 00BF     		nop
 177 0060 BD46     		mov	sp, r7
 178              	.LCFI6:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 5


 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 0062 5DF8047B 		ldr	r7, [sp], #4
 182              	.LCFI7:
 183              		.cfi_restore 7
 184              		.cfi_def_cfa_offset 0
 185 0066 7047     		bx	lr
 186              	.L6:
 187              		.align	2
 188              	.L5:
 189 0068 00380240 		.word	1073887232
 190 006c 000C0240 		.word	1073875968
 191 0070 00480040 		.word	1073760256
 192              		.cfi_endproc
 193              	.LFE1:
 195              		.section	.text.usart3_interrupt_default_init,"ax",%progbits
 196              		.align	1
 197              		.global	usart3_interrupt_default_init
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	usart3_interrupt_default_init:
 203              	.LFB2:
  54:./Src/stm32f767zi_usart.c **** 
  55:./Src/stm32f767zi_usart.c **** void usart3_interrupt_default_init(void)
  56:./Src/stm32f767zi_usart.c **** {
 204              		.loc 1 56 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 80B4     		push	{r7}
 210              	.LCFI8:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 7, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI9:
 215              		.cfi_def_cfa_register 7
  57:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  58:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
 216              		.loc 1 58 15
 217 0004 204B     		ldr	r3, .L8
 218 0006 1B6B     		ldr	r3, [r3, #48]
 219 0008 1F4A     		ldr	r2, .L8
 220 000a 43F00803 		orr	r3, r3, #8
 221 000e 1363     		str	r3, [r2, #48]
  59:./Src/stm32f767zi_usart.c **** 	// Set PD8 (Tx) mode to alternate function.
  60:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_TX_POS;
 222              		.loc 1 60 15
 223 0010 1E4B     		ldr	r3, .L8+4
 224 0012 1B68     		ldr	r3, [r3]
 225 0014 1D4A     		ldr	r2, .L8+4
 226 0016 43F40033 		orr	r3, r3, #131072
 227 001a 1360     		str	r3, [r2]
  61:./Src/stm32f767zi_usart.c **** 	// Set PD9 (Rx) mode to alternate function.
  62:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_RX_POS;
 228              		.loc 1 62 15
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 6


 229 001c 1B4B     		ldr	r3, .L8+4
 230 001e 1B68     		ldr	r3, [r3]
 231 0020 1A4A     		ldr	r2, .L8+4
 232 0022 43F40023 		orr	r3, r3, #524288
 233 0026 1360     		str	r3, [r2]
  63:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  64:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[1] |= (USART3_AF << 4) | USART3_AF;
 234              		.loc 1 64 16
 235 0028 184B     		ldr	r3, .L8+4
 236 002a 5B6A     		ldr	r3, [r3, #36]
 237 002c 174A     		ldr	r2, .L8+4
 238 002e 43F07703 		orr	r3, r3, #119
 239 0032 5362     		str	r3, [r2, #36]
  65:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  66:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART3_CLK_EN;
 240              		.loc 1 66 15
 241 0034 144B     		ldr	r3, .L8
 242 0036 1B6C     		ldr	r3, [r3, #64]
 243 0038 134A     		ldr	r2, .L8
 244 003a 43F48023 		orr	r3, r3, #262144
 245 003e 1364     		str	r3, [r2, #64]
  67:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  68:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS); 
 246              		.loc 1 68 14
 247 0040 134B     		ldr	r3, .L8+8
 248 0042 1B68     		ldr	r3, [r3]
 249 0044 124A     		ldr	r2, .L8+8
 250 0046 43F00C03 		orr	r3, r3, #12
 251 004a 1360     		str	r3, [r2]
  69:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  70:./Src/stm32f767zi_usart.c **** 	USART3->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
 252              		.loc 1 70 8
 253 004c 104B     		ldr	r3, .L8+8
 254              		.loc 1 70 14
 255 004e 8B22     		movs	r2, #139
 256 0050 DA60     		str	r2, [r3, #12]
  71:./Src/stm32f767zi_usart.c **** 	// enable USART3
  72:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_UE_POS;
 257              		.loc 1 72 14
 258 0052 0F4B     		ldr	r3, .L8+8
 259 0054 1B68     		ldr	r3, [r3]
 260 0056 0E4A     		ldr	r2, .L8+8
 261 0058 43F00103 		orr	r3, r3, #1
 262 005c 1360     		str	r3, [r2]
  73:./Src/stm32f767zi_usart.c **** 	// Enable USART TXE interrupt
  74:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_TXEIE_POS;
 263              		.loc 1 74 14
 264 005e 0C4B     		ldr	r3, .L8+8
 265 0060 1B68     		ldr	r3, [r3]
 266 0062 0B4A     		ldr	r2, .L8+8
 267 0064 43F08003 		orr	r3, r3, #128
 268 0068 1360     		str	r3, [r2]
  75:./Src/stm32f767zi_usart.c **** 	// Enable USART RXNE interrupt
  76:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1 << USART_CR1_RXNEIE_POS;
 269              		.loc 1 76 14
 270 006a 094B     		ldr	r3, .L8+8
 271 006c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 7


 272 006e 084A     		ldr	r2, .L8+8
 273 0070 43F02003 		orr	r3, r3, #32
 274 0074 1360     		str	r3, [r2]
  77:./Src/stm32f767zi_usart.c **** 	// Enable USART interrupt in NVIC
  78:./Src/stm32f767zi_usart.c **** 	NVIC->ISER[(((uint32_t)USART3_IRQn) >> 5UL)] =
 275              		.loc 1 78 6
 276 0076 074B     		ldr	r3, .L8+12
 277              		.loc 1 78 47
 278 0078 8022     		movs	r2, #128
 279 007a 5A60     		str	r2, [r3, #4]
  79:./Src/stm32f767zi_usart.c **** 		(uint32_t)(1UL << (((uint32_t)USART3_IRQn) & 0x1FUL));
  80:./Src/stm32f767zi_usart.c **** }
 280              		.loc 1 80 1
 281 007c 00BF     		nop
 282 007e BD46     		mov	sp, r7
 283              	.LCFI10:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0080 5DF8047B 		ldr	r7, [sp], #4
 287              	.LCFI11:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 0084 7047     		bx	lr
 291              	.L9:
 292 0086 00BF     		.align	2
 293              	.L8:
 294 0088 00380240 		.word	1073887232
 295 008c 000C0240 		.word	1073875968
 296 0090 00480040 		.word	1073760256
 297 0094 00E100E0 		.word	-536813312
 298              		.cfi_endproc
 299              	.LFE2:
 301              		.section	.text.usart_write,"ax",%progbits
 302              		.align	1
 303              		.global	usart_write
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	usart_write:
 309              	.LFB3:
  81:./Src/stm32f767zi_usart.c **** 
  82:./Src/stm32f767zi_usart.c **** void usart_write(USART_reg_t *USARTx, uint8_t value)
  83:./Src/stm32f767zi_usart.c **** {
 310              		.loc 1 83 1
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315 0000 80B4     		push	{r7}
 316              	.LCFI12:
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 7, -4
 319 0002 83B0     		sub	sp, sp, #12
 320              	.LCFI13:
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI14:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 8


 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 326 0008 0B46     		mov	r3, r1
 327 000a FB70     		strb	r3, [r7, #3]
  84:./Src/stm32f767zi_usart.c **** 	// Make sure transmit data register is empty
  85:./Src/stm32f767zi_usart.c **** 	while (!(USARTx->ISR & USART_ISR_TXE))
 328              		.loc 1 85 8
 329 000c 00BF     		nop
 330              	.L11:
 331              		.loc 1 85 17 discriminator 1
 332 000e 7B68     		ldr	r3, [r7, #4]
 333 0010 DB69     		ldr	r3, [r3, #28]
 334              		.loc 1 85 23 discriminator 1
 335 0012 03F08003 		and	r3, r3, #128
 336              		.loc 1 85 8 discriminator 1
 337 0016 002B     		cmp	r3, #0
 338 0018 F9D0     		beq	.L11
  86:./Src/stm32f767zi_usart.c **** 		;
  87:./Src/stm32f767zi_usart.c **** 	// Write value into transmit data register
  88:./Src/stm32f767zi_usart.c **** 	USARTx->TDR = value;
 339              		.loc 1 88 14
 340 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 341 001c 7B68     		ldr	r3, [r7, #4]
 342 001e 9A62     		str	r2, [r3, #40]
  89:./Src/stm32f767zi_usart.c **** }
 343              		.loc 1 89 1
 344 0020 00BF     		nop
 345 0022 0C37     		adds	r7, r7, #12
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 4
 348 0024 BD46     		mov	sp, r7
 349              	.LCFI16:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 0026 5DF8047B 		ldr	r7, [sp], #4
 353              	.LCFI17:
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 002a 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE3:
 360              		.section	.text.usart_read,"ax",%progbits
 361              		.align	1
 362              		.global	usart_read
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	usart_read:
 368              	.LFB4:
  90:./Src/stm32f767zi_usart.c **** 
  91:./Src/stm32f767zi_usart.c **** uint8_t usart_read(USART_reg_t *USARTx)
  92:./Src/stm32f767zi_usart.c **** {
 369              		.loc 1 92 1
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 9


 374 0000 80B4     		push	{r7}
 375              	.LCFI18:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 83B0     		sub	sp, sp, #12
 379              	.LCFI19:
 380              		.cfi_def_cfa_offset 16
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI20:
 383              		.cfi_def_cfa_register 7
 384 0006 7860     		str	r0, [r7, #4]
  93:./Src/stm32f767zi_usart.c **** 	while (!(USARTx->ISR & USART_ISR_RXNE))
 385              		.loc 1 93 8
 386 0008 00BF     		nop
 387              	.L13:
 388              		.loc 1 93 17 discriminator 1
 389 000a 7B68     		ldr	r3, [r7, #4]
 390 000c DB69     		ldr	r3, [r3, #28]
 391              		.loc 1 93 23 discriminator 1
 392 000e 03F02003 		and	r3, r3, #32
 393              		.loc 1 93 8 discriminator 1
 394 0012 002B     		cmp	r3, #0
 395 0014 F9D0     		beq	.L13
  94:./Src/stm32f767zi_usart.c **** 		;
  95:./Src/stm32f767zi_usart.c **** 	return USARTx->RDR & 0xFFU;
 396              		.loc 1 95 15
 397 0016 7B68     		ldr	r3, [r7, #4]
 398 0018 5B6A     		ldr	r3, [r3, #36]
 399              		.loc 1 95 21
 400 001a DBB2     		uxtb	r3, r3
  96:./Src/stm32f767zi_usart.c **** }
 401              		.loc 1 96 1
 402 001c 1846     		mov	r0, r3
 403 001e 0C37     		adds	r7, r7, #12
 404              	.LCFI21:
 405              		.cfi_def_cfa_offset 4
 406 0020 BD46     		mov	sp, r7
 407              	.LCFI22:
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0022 5DF8047B 		ldr	r7, [sp], #4
 411              	.LCFI23:
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0026 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE4:
 418              		.section	.text.__io_putchar,"ax",%progbits
 419              		.align	1
 420              		.global	__io_putchar
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	__io_putchar:
 426              	.LFB5:
  97:./Src/stm32f767zi_usart.c **** 
  98:./Src/stm32f767zi_usart.c **** int __io_putchar(int ch)
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 10


  99:./Src/stm32f767zi_usart.c **** {
 427              		.loc 1 99 1
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431 0000 80B5     		push	{r7, lr}
 432              	.LCFI24:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 7, -8
 435              		.cfi_offset 14, -4
 436 0002 82B0     		sub	sp, sp, #8
 437              	.LCFI25:
 438              		.cfi_def_cfa_offset 16
 439 0004 00AF     		add	r7, sp, #0
 440              	.LCFI26:
 441              		.cfi_def_cfa_register 7
 442 0006 7860     		str	r0, [r7, #4]
 100:./Src/stm32f767zi_usart.c **** 	usart_write(USART3, ch);
 443              		.loc 1 100 2
 444 0008 7B68     		ldr	r3, [r7, #4]
 445 000a DBB2     		uxtb	r3, r3
 446 000c 1946     		mov	r1, r3
 447 000e 0448     		ldr	r0, .L17
 448 0010 FFF7FEFF 		bl	usart_write
 101:./Src/stm32f767zi_usart.c **** 	return ch;
 449              		.loc 1 101 9
 450 0014 7B68     		ldr	r3, [r7, #4]
 102:./Src/stm32f767zi_usart.c **** }
 451              		.loc 1 102 1
 452 0016 1846     		mov	r0, r3
 453 0018 0837     		adds	r7, r7, #8
 454              	.LCFI27:
 455              		.cfi_def_cfa_offset 8
 456 001a BD46     		mov	sp, r7
 457              	.LCFI28:
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 001c 80BD     		pop	{r7, pc}
 461              	.L18:
 462 001e 00BF     		.align	2
 463              	.L17:
 464 0020 00480040 		.word	1073760256
 465              		.cfi_endproc
 466              	.LFE5:
 468              		.section	.text.__io_getchar,"ax",%progbits
 469              		.align	1
 470              		.global	__io_getchar
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	__io_getchar:
 476              	.LFB6:
 103:./Src/stm32f767zi_usart.c **** 
 104:./Src/stm32f767zi_usart.c **** int __io_getchar(void)
 105:./Src/stm32f767zi_usart.c **** {
 477              		.loc 1 105 1
 478              		.cfi_startproc
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 11


 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
 482              	.LCFI29:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 00AF     		add	r7, sp, #0
 487              	.LCFI30:
 488              		.cfi_def_cfa_register 7
 106:./Src/stm32f767zi_usart.c **** 	return usart_read(USART3);
 489              		.loc 1 106 9
 490 0004 0248     		ldr	r0, .L21
 491 0006 FFF7FEFF 		bl	usart_read
 492 000a 0346     		mov	r3, r0
 107:./Src/stm32f767zi_usart.c **** }...
 493              		.loc 1 107 1
 494 000c 1846     		mov	r0, r3
 495 000e 80BD     		pop	{r7, pc}
 496              	.L22:
 497              		.align	2
 498              	.L21:
 499 0010 00480040 		.word	1073760256
 500              		.cfi_endproc
 501              	.LFE6:
 503              		.text
 504              	.Letext0:
 505              		.file 2 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 506              		.file 3 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 507              		.file 4 "./Inc/stm32f767zi_hal.h"
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f767zi_usart.c
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:19     .text.usart2_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:25     .text.usart2_default_init:00000000 usart2_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:101    .text.usart2_default_init:00000068 $d
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:108    .text.usart3_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:114    .text.usart3_default_init:00000000 usart3_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:189    .text.usart3_default_init:00000068 $d
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:196    .text.usart3_interrupt_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:202    .text.usart3_interrupt_default_init:00000000 usart3_interrupt_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:294    .text.usart3_interrupt_default_init:00000088 $d
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:302    .text.usart_write:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:308    .text.usart_write:00000000 usart_write
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:361    .text.usart_read:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:367    .text.usart_read:00000000 usart_read
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:419    .text.__io_putchar:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:425    .text.__io_putchar:00000000 __io_putchar
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:464    .text.__io_putchar:00000020 $d
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:469    .text.__io_getchar:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:475    .text.__io_getchar:00000000 __io_getchar
C:\Users\LINZHE~1\AppData\Local\Temp\cc6EHNU7.s:499    .text.__io_getchar:00000010 $d

NO UNDEFINED SYMBOLS
