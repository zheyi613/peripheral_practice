ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f767zi_usart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.usart2_default_init,"ax",%progbits
  19              		.align	1
  20              		.global	usart2_default_init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	usart2_default_init:
  26              	.LFB0:
  27              		.file 1 "./Src/stm32f767zi_usart.c"
   1:./Src/stm32f767zi_usart.c **** /**
   2:./Src/stm32f767zi_usart.c ****  * @file stm32f767zi_usart.c
   3:./Src/stm32f767zi_usart.c ****  * @author zheyi613 (zheyi880613@gmail.com)
   4:./Src/stm32f767zi_usart.c ****  * @brief usart/uart
   5:./Src/stm32f767zi_usart.c ****  * @date 2022-08-10
   6:./Src/stm32f767zi_usart.c ****  */
   7:./Src/stm32f767zi_usart.c **** 
   8:./Src/stm32f767zi_usart.c **** #include "stm32f767zi_usart.h"
   9:./Src/stm32f767zi_usart.c **** 
  10:./Src/stm32f767zi_usart.c **** void usart2_default_init(void)
  11:./Src/stm32f767zi_usart.c **** {
  28              		.loc 1 11 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  12:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  13:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
  40              		.loc 1 13 15
  41 0004 184B     		ldr	r3, .L2
  42 0006 1B6B     		ldr	r3, [r3, #48]
  43 0008 174A     		ldr	r2, .L2
  44 000a 43F00803 		orr	r3, r3, #8
  45 000e 1363     		str	r3, [r2, #48]
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 2


  14:./Src/stm32f767zi_usart.c **** 	// Set PD5 (Tx) mode to alternate function.
  15:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART2_TX_POS;
  46              		.loc 1 15 15
  47 0010 164B     		ldr	r3, .L2+4
  48 0012 1B68     		ldr	r3, [r3]
  49 0014 154A     		ldr	r2, .L2+4
  50 0016 43F40063 		orr	r3, r3, #2048
  51 001a 1360     		str	r3, [r2]
  16:./Src/stm32f767zi_usart.c **** 	// Set PD6 (Rx) mode to alternate function.
  17:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART2_RX_POS;
  52              		.loc 1 17 15
  53 001c 134B     		ldr	r3, .L2+4
  54 001e 1B68     		ldr	r3, [r3]
  55 0020 124A     		ldr	r2, .L2+4
  56 0022 43F40053 		orr	r3, r3, #8192
  57 0026 1360     		str	r3, [r2]
  18:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  19:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[0] |= (USART2_AF << 20) | (USART2_AF << 24);
  58              		.loc 1 19 16
  59 0028 104B     		ldr	r3, .L2+4
  60 002a 1B6A     		ldr	r3, [r3, #32]
  61 002c 0F4A     		ldr	r2, .L2+4
  62 002e 43F0EE63 		orr	r3, r3, #124780544
  63 0032 1362     		str	r3, [r2, #32]
  20:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  21:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART2_CLK_EN;
  64              		.loc 1 21 15
  65 0034 0C4B     		ldr	r3, .L2
  66 0036 1B6C     		ldr	r3, [r3, #64]
  67 0038 0B4A     		ldr	r2, .L2
  68 003a 43F40033 		orr	r3, r3, #131072
  69 003e 1364     		str	r3, [r2, #64]
  22:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  23:./Src/stm32f767zi_usart.c **** 	USART2->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS);
  70              		.loc 1 23 14
  71 0040 0B4B     		ldr	r3, .L2+8
  72 0042 1B68     		ldr	r3, [r3]
  73 0044 0A4A     		ldr	r2, .L2+8
  74 0046 43F00C03 		orr	r3, r3, #12
  75 004a 1360     		str	r3, [r2]
  24:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  25:./Src/stm32f767zi_usart.c **** 	USART2->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
  76              		.loc 1 25 8
  77 004c 084B     		ldr	r3, .L2+8
  78              		.loc 1 25 14
  79 004e 8B22     		movs	r2, #139
  80 0050 DA60     		str	r2, [r3, #12]
  26:./Src/stm32f767zi_usart.c **** 	// enable USART3
  27:./Src/stm32f767zi_usart.c **** 	USART2->CR1 |= 1U << USART_CR1_UE_POS;
  81              		.loc 1 27 14
  82 0052 074B     		ldr	r3, .L2+8
  83 0054 1B68     		ldr	r3, [r3]
  84 0056 064A     		ldr	r2, .L2+8
  85 0058 43F00103 		orr	r3, r3, #1
  86 005c 1360     		str	r3, [r2]
  28:./Src/stm32f767zi_usart.c **** }
  87              		.loc 1 28 1
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 3


  88 005e 00BF     		nop
  89 0060 BD46     		mov	sp, r7
  90              	.LCFI2:
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0062 5DF8047B 		ldr	r7, [sp], #4
  94              	.LCFI3:
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 0066 7047     		bx	lr
  98              	.L3:
  99              		.align	2
 100              	.L2:
 101 0068 00380240 		.word	1073887232
 102 006c 000C0240 		.word	1073875968
 103 0070 00440040 		.word	1073759232
 104              		.cfi_endproc
 105              	.LFE0:
 107              		.section	.text.usart3_default_init,"ax",%progbits
 108              		.align	1
 109              		.global	usart3_default_init
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	usart3_default_init:
 115              	.LFB1:
  29:./Src/stm32f767zi_usart.c **** 
  30:./Src/stm32f767zi_usart.c **** // word length: 8
  31:./Src/stm32f767zi_usart.c **** // transmit enable: enable
  32:./Src/stm32f767zi_usart.c **** // parity: none
  33:./Src/stm32f767zi_usart.c **** // stop bits: 1
  34:./Src/stm32f767zi_usart.c **** // baud rate: 115200
  35:./Src/stm32f767zi_usart.c **** void usart3_default_init(void)
  36:./Src/stm32f767zi_usart.c **** {
 116              		.loc 1 36 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              	.LCFI4:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              	.LCFI5:
 127              		.cfi_def_cfa_register 7
  37:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  38:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
 128              		.loc 1 38 15
 129 0004 184B     		ldr	r3, .L5
 130 0006 1B6B     		ldr	r3, [r3, #48]
 131 0008 174A     		ldr	r2, .L5
 132 000a 43F00803 		orr	r3, r3, #8
 133 000e 1363     		str	r3, [r2, #48]
  39:./Src/stm32f767zi_usart.c **** 	// Set PD8 (Tx) mode to alternate function.
  40:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_TX_POS;
 134              		.loc 1 40 15
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 4


 135 0010 164B     		ldr	r3, .L5+4
 136 0012 1B68     		ldr	r3, [r3]
 137 0014 154A     		ldr	r2, .L5+4
 138 0016 43F40033 		orr	r3, r3, #131072
 139 001a 1360     		str	r3, [r2]
  41:./Src/stm32f767zi_usart.c **** 	// Set PD9 (Rx) mode to alternate function.
  42:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_RX_POS;
 140              		.loc 1 42 15
 141 001c 134B     		ldr	r3, .L5+4
 142 001e 1B68     		ldr	r3, [r3]
 143 0020 124A     		ldr	r2, .L5+4
 144 0022 43F40023 		orr	r3, r3, #524288
 145 0026 1360     		str	r3, [r2]
  43:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  44:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[1] |= (USART3_AF << 4) | USART3_AF;
 146              		.loc 1 44 16
 147 0028 104B     		ldr	r3, .L5+4
 148 002a 5B6A     		ldr	r3, [r3, #36]
 149 002c 0F4A     		ldr	r2, .L5+4
 150 002e 43F07703 		orr	r3, r3, #119
 151 0032 5362     		str	r3, [r2, #36]
  45:./Src/stm32f767zi_usart.c **** 	systick_delay_ms(10);
 152              		.loc 1 45 2
 153 0034 0A20     		movs	r0, #10
 154 0036 FFF7FEFF 		bl	systick_delay_ms
  46:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  47:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART3_CLK_EN;
 155              		.loc 1 47 15
 156 003a 0B4B     		ldr	r3, .L5
 157 003c 1B6C     		ldr	r3, [r3, #64]
 158 003e 0A4A     		ldr	r2, .L5
 159 0040 43F48023 		orr	r3, r3, #262144
 160 0044 1364     		str	r3, [r2, #64]
  48:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  49:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS);
 161              		.loc 1 49 14
 162 0046 0A4B     		ldr	r3, .L5+8
 163 0048 1B68     		ldr	r3, [r3]
 164 004a 094A     		ldr	r2, .L5+8
 165 004c 43F00C03 		orr	r3, r3, #12
 166 0050 1360     		str	r3, [r2]
  50:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  51:./Src/stm32f767zi_usart.c **** 	USART3->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
 167              		.loc 1 51 8
 168 0052 074B     		ldr	r3, .L5+8
 169              		.loc 1 51 14
 170 0054 8B22     		movs	r2, #139
 171 0056 DA60     		str	r2, [r3, #12]
  52:./Src/stm32f767zi_usart.c **** 	// enable USART3
  53:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_UE_POS;
 172              		.loc 1 53 14
 173 0058 054B     		ldr	r3, .L5+8
 174 005a 1B68     		ldr	r3, [r3]
 175 005c 044A     		ldr	r2, .L5+8
 176 005e 43F00103 		orr	r3, r3, #1
 177 0062 1360     		str	r3, [r2]
  54:./Src/stm32f767zi_usart.c **** }
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 5


 178              		.loc 1 54 1
 179 0064 00BF     		nop
 180 0066 80BD     		pop	{r7, pc}
 181              	.L6:
 182              		.align	2
 183              	.L5:
 184 0068 00380240 		.word	1073887232
 185 006c 000C0240 		.word	1073875968
 186 0070 00480040 		.word	1073760256
 187              		.cfi_endproc
 188              	.LFE1:
 190              		.section	.text.usart3_interrupt_default_init,"ax",%progbits
 191              		.align	1
 192              		.global	usart3_interrupt_default_init
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	usart3_interrupt_default_init:
 198              	.LFB2:
  55:./Src/stm32f767zi_usart.c **** 
  56:./Src/stm32f767zi_usart.c **** void usart3_interrupt_default_init(void)
  57:./Src/stm32f767zi_usart.c **** {
 199              		.loc 1 57 1
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              	.LCFI6:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 00AF     		add	r7, sp, #0
 209              	.LCFI7:
 210              		.cfi_def_cfa_register 7
  58:./Src/stm32f767zi_usart.c **** 	// Enable clock access to GPIOD.
  59:./Src/stm32f767zi_usart.c **** 	RCC->AHB1ENR |= GPIOD_CLK_EN;
 211              		.loc 1 59 15
 212 0004 204B     		ldr	r3, .L8
 213 0006 1B6B     		ldr	r3, [r3, #48]
 214 0008 1F4A     		ldr	r2, .L8
 215 000a 43F00803 		orr	r3, r3, #8
 216 000e 1363     		str	r3, [r2, #48]
  60:./Src/stm32f767zi_usart.c **** 	// Set PD8 (Tx) mode to alternate function.
  61:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_TX_POS;
 217              		.loc 1 61 15
 218 0010 1E4B     		ldr	r3, .L8+4
 219 0012 1B68     		ldr	r3, [r3]
 220 0014 1D4A     		ldr	r2, .L8+4
 221 0016 43F40033 		orr	r3, r3, #131072
 222 001a 1360     		str	r3, [r2]
  62:./Src/stm32f767zi_usart.c **** 	// Set PD9 (Rx) mode to alternate function.
  63:./Src/stm32f767zi_usart.c **** 	GPIOD->MODER |= GPIO_MODE_ALTFN << 2 * USART3_RX_POS;
 223              		.loc 1 63 15
 224 001c 1B4B     		ldr	r3, .L8+4
 225 001e 1B68     		ldr	r3, [r3]
 226 0020 1A4A     		ldr	r2, .L8+4
 227 0022 43F40023 		orr	r3, r3, #524288
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 6


 228 0026 1360     		str	r3, [r2]
  64:./Src/stm32f767zi_usart.c **** 	// Set alternate function to USART. GPIO_AFRH = AF7(0b0111) | AF7 << 4
  65:./Src/stm32f767zi_usart.c **** 	GPIOD->AFR[1] |= (USART3_AF << 4) | USART3_AF;
 229              		.loc 1 65 16
 230 0028 184B     		ldr	r3, .L8+4
 231 002a 5B6A     		ldr	r3, [r3, #36]
 232 002c 174A     		ldr	r2, .L8+4
 233 002e 43F07703 		orr	r3, r3, #119
 234 0032 5362     		str	r3, [r2, #36]
  66:./Src/stm32f767zi_usart.c **** 	// Enable clock to USART3 module
  67:./Src/stm32f767zi_usart.c **** 	RCC->APB1ENR |= USART3_CLK_EN;
 235              		.loc 1 67 15
 236 0034 144B     		ldr	r3, .L8
 237 0036 1B6C     		ldr	r3, [r3, #64]
 238 0038 134A     		ldr	r2, .L8
 239 003a 43F48023 		orr	r3, r3, #262144
 240 003e 1364     		str	r3, [r2, #64]
  68:./Src/stm32f767zi_usart.c **** 	// Configure USART parameters (TE, RE, PS, PCE, M, STOP)
  69:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= (1U << USART_CR1_TE_POS) | (1U << USART_CR1_RE_POS); 
 241              		.loc 1 69 14
 242 0040 134B     		ldr	r3, .L8+8
 243 0042 1B68     		ldr	r3, [r3]
 244 0044 124A     		ldr	r2, .L8+8
 245 0046 43F00C03 		orr	r3, r3, #12
 246 004a 1360     		str	r3, [r2]
  70:./Src/stm32f767zi_usart.c **** 	// Set baud rate
  71:./Src/stm32f767zi_usart.c **** 	USART3->BRR = (PERIPH_CLK + (115200 / 2U)) / 115200;
 247              		.loc 1 71 8
 248 004c 104B     		ldr	r3, .L8+8
 249              		.loc 1 71 14
 250 004e 8B22     		movs	r2, #139
 251 0050 DA60     		str	r2, [r3, #12]
  72:./Src/stm32f767zi_usart.c **** 	// enable USART3
  73:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_UE_POS;
 252              		.loc 1 73 14
 253 0052 0F4B     		ldr	r3, .L8+8
 254 0054 1B68     		ldr	r3, [r3]
 255 0056 0E4A     		ldr	r2, .L8+8
 256 0058 43F00103 		orr	r3, r3, #1
 257 005c 1360     		str	r3, [r2]
  74:./Src/stm32f767zi_usart.c **** 	// Enable USART TXE interrupt
  75:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1U << USART_CR1_TXEIE_POS;
 258              		.loc 1 75 14
 259 005e 0C4B     		ldr	r3, .L8+8
 260 0060 1B68     		ldr	r3, [r3]
 261 0062 0B4A     		ldr	r2, .L8+8
 262 0064 43F08003 		orr	r3, r3, #128
 263 0068 1360     		str	r3, [r2]
  76:./Src/stm32f767zi_usart.c **** 	// Enable USART RXNE interrupt
  77:./Src/stm32f767zi_usart.c **** 	USART3->CR1 |= 1 << USART_CR1_RXNEIE_POS;
 264              		.loc 1 77 14
 265 006a 094B     		ldr	r3, .L8+8
 266 006c 1B68     		ldr	r3, [r3]
 267 006e 084A     		ldr	r2, .L8+8
 268 0070 43F02003 		orr	r3, r3, #32
 269 0074 1360     		str	r3, [r2]
  78:./Src/stm32f767zi_usart.c **** 	// Enable USART interrupt in NVIC
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 7


  79:./Src/stm32f767zi_usart.c **** 	NVIC->ISER[(((uint32_t)USART3_IRQn) >> 5UL)] =
 270              		.loc 1 79 6
 271 0076 074B     		ldr	r3, .L8+12
 272              		.loc 1 79 47
 273 0078 8022     		movs	r2, #128
 274 007a 5A60     		str	r2, [r3, #4]
  80:./Src/stm32f767zi_usart.c **** 		(uint32_t)(1UL << (((uint32_t)USART3_IRQn) & 0x1FUL));
  81:./Src/stm32f767zi_usart.c **** }
 275              		.loc 1 81 1
 276 007c 00BF     		nop
 277 007e BD46     		mov	sp, r7
 278              	.LCFI8:
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0080 5DF8047B 		ldr	r7, [sp], #4
 282              	.LCFI9:
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0084 7047     		bx	lr
 286              	.L9:
 287 0086 00BF     		.align	2
 288              	.L8:
 289 0088 00380240 		.word	1073887232
 290 008c 000C0240 		.word	1073875968
 291 0090 00480040 		.word	1073760256
 292 0094 00E100E0 		.word	-536813312
 293              		.cfi_endproc
 294              	.LFE2:
 296              		.section	.text.usart_write,"ax",%progbits
 297              		.align	1
 298              		.global	usart_write
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	usart_write:
 304              	.LFB3:
  82:./Src/stm32f767zi_usart.c **** 
  83:./Src/stm32f767zi_usart.c **** void usart_write(USART_reg_t *USARTx, uint8_t value)
  84:./Src/stm32f767zi_usart.c **** {
 305              		.loc 1 84 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              	.LCFI10:
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 7, -4
 314 0002 83B0     		sub	sp, sp, #12
 315              	.LCFI11:
 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI12:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 321 0008 0B46     		mov	r3, r1
 322 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 8


  85:./Src/stm32f767zi_usart.c **** 	// Make sure transmit data register is empty
  86:./Src/stm32f767zi_usart.c **** 	while (!(USARTx->ISR & USART_ISR_TXE))
 323              		.loc 1 86 8
 324 000c 00BF     		nop
 325              	.L11:
 326              		.loc 1 86 17 discriminator 1
 327 000e 7B68     		ldr	r3, [r7, #4]
 328 0010 DB69     		ldr	r3, [r3, #28]
 329              		.loc 1 86 23 discriminator 1
 330 0012 03F08003 		and	r3, r3, #128
 331              		.loc 1 86 8 discriminator 1
 332 0016 002B     		cmp	r3, #0
 333 0018 F9D0     		beq	.L11
  87:./Src/stm32f767zi_usart.c **** 		;
  88:./Src/stm32f767zi_usart.c **** 	// Write value into transmit data register
  89:./Src/stm32f767zi_usart.c **** 	USARTx->TDR = value;
 334              		.loc 1 89 14
 335 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 336 001c 7B68     		ldr	r3, [r7, #4]
 337 001e 9A62     		str	r2, [r3, #40]
  90:./Src/stm32f767zi_usart.c **** }
 338              		.loc 1 90 1
 339 0020 00BF     		nop
 340 0022 0C37     		adds	r7, r7, #12
 341              	.LCFI13:
 342              		.cfi_def_cfa_offset 4
 343 0024 BD46     		mov	sp, r7
 344              	.LCFI14:
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0026 5DF8047B 		ldr	r7, [sp], #4
 348              	.LCFI15:
 349              		.cfi_restore 7
 350              		.cfi_def_cfa_offset 0
 351 002a 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE3:
 355              		.section	.text.usart_read,"ax",%progbits
 356              		.align	1
 357              		.global	usart_read
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	usart_read:
 363              	.LFB4:
  91:./Src/stm32f767zi_usart.c **** 
  92:./Src/stm32f767zi_usart.c **** uint8_t usart_read(USART_reg_t *USARTx)
  93:./Src/stm32f767zi_usart.c **** {
 364              		.loc 1 93 1
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI16:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 9


 373 0002 83B0     		sub	sp, sp, #12
 374              	.LCFI17:
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              	.LCFI18:
 378              		.cfi_def_cfa_register 7
 379 0006 7860     		str	r0, [r7, #4]
  94:./Src/stm32f767zi_usart.c **** 	while (!(USARTx->ISR & USART_ISR_RXNE))
 380              		.loc 1 94 8
 381 0008 00BF     		nop
 382              	.L13:
 383              		.loc 1 94 17 discriminator 1
 384 000a 7B68     		ldr	r3, [r7, #4]
 385 000c DB69     		ldr	r3, [r3, #28]
 386              		.loc 1 94 23 discriminator 1
 387 000e 03F02003 		and	r3, r3, #32
 388              		.loc 1 94 8 discriminator 1
 389 0012 002B     		cmp	r3, #0
 390 0014 F9D0     		beq	.L13
  95:./Src/stm32f767zi_usart.c **** 		;
  96:./Src/stm32f767zi_usart.c **** 	return USARTx->RDR & 0xFFU;
 391              		.loc 1 96 15
 392 0016 7B68     		ldr	r3, [r7, #4]
 393 0018 5B6A     		ldr	r3, [r3, #36]
 394              		.loc 1 96 21
 395 001a DBB2     		uxtb	r3, r3
  97:./Src/stm32f767zi_usart.c **** }
 396              		.loc 1 97 1
 397 001c 1846     		mov	r0, r3
 398 001e 0C37     		adds	r7, r7, #12
 399              	.LCFI19:
 400              		.cfi_def_cfa_offset 4
 401 0020 BD46     		mov	sp, r7
 402              	.LCFI20:
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0022 5DF8047B 		ldr	r7, [sp], #4
 406              	.LCFI21:
 407              		.cfi_restore 7
 408              		.cfi_def_cfa_offset 0
 409 0026 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE4:
 413              		.section	.text.__io_putchar,"ax",%progbits
 414              		.align	1
 415              		.global	__io_putchar
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	__io_putchar:
 421              	.LFB5:
  98:./Src/stm32f767zi_usart.c **** 
  99:./Src/stm32f767zi_usart.c **** int __io_putchar(int ch)
 100:./Src/stm32f767zi_usart.c **** {
 422              		.loc 1 100 1
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 10


 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI22:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
 432              	.LCFI23:
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI24:
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 101:./Src/stm32f767zi_usart.c **** 	usart_write(USART3, ch);
 438              		.loc 1 101 2
 439 0008 7B68     		ldr	r3, [r7, #4]
 440 000a DBB2     		uxtb	r3, r3
 441 000c 1946     		mov	r1, r3
 442 000e 0448     		ldr	r0, .L17
 443 0010 FFF7FEFF 		bl	usart_write
 102:./Src/stm32f767zi_usart.c **** 	return ch;
 444              		.loc 1 102 9
 445 0014 7B68     		ldr	r3, [r7, #4]
 103:./Src/stm32f767zi_usart.c **** }
 446              		.loc 1 103 1
 447 0016 1846     		mov	r0, r3
 448 0018 0837     		adds	r7, r7, #8
 449              	.LCFI25:
 450              		.cfi_def_cfa_offset 8
 451 001a BD46     		mov	sp, r7
 452              	.LCFI26:
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 001c 80BD     		pop	{r7, pc}
 456              	.L18:
 457 001e 00BF     		.align	2
 458              	.L17:
 459 0020 00480040 		.word	1073760256
 460              		.cfi_endproc
 461              	.LFE5:
 463              		.section	.text.__io_getchar,"ax",%progbits
 464              		.align	1
 465              		.global	__io_getchar
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	__io_getchar:
 471              	.LFB6:
 104:./Src/stm32f767zi_usart.c **** 
 105:./Src/stm32f767zi_usart.c **** int __io_getchar(void)
 106:./Src/stm32f767zi_usart.c **** {
 472              		.loc 1 106 1
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476 0000 80B5     		push	{r7, lr}
 477              	.LCFI27:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 11


 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 00AF     		add	r7, sp, #0
 482              	.LCFI28:
 483              		.cfi_def_cfa_register 7
 107:./Src/stm32f767zi_usart.c **** 	return usart_read(USART3);
 484              		.loc 1 107 9
 485 0004 0248     		ldr	r0, .L21
 486 0006 FFF7FEFF 		bl	usart_read
 487 000a 0346     		mov	r3, r0
 108:./Src/stm32f767zi_usart.c **** }...
 488              		.loc 1 108 1
 489 000c 1846     		mov	r0, r3
 490 000e 80BD     		pop	{r7, pc}
 491              	.L22:
 492              		.align	2
 493              	.L21:
 494 0010 00480040 		.word	1073760256
 495              		.cfi_endproc
 496              	.LFE6:
 498              		.text
 499              	.Letext0:
 500              		.file 2 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 501              		.file 3 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 502              		.file 4 "./Inc/stm32f767zi_hal.h"
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f767zi_usart.c
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:19     .text.usart2_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:25     .text.usart2_default_init:00000000 usart2_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:101    .text.usart2_default_init:00000068 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:108    .text.usart3_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:114    .text.usart3_default_init:00000000 usart3_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:184    .text.usart3_default_init:00000068 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:191    .text.usart3_interrupt_default_init:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:197    .text.usart3_interrupt_default_init:00000000 usart3_interrupt_default_init
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:289    .text.usart3_interrupt_default_init:00000088 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:297    .text.usart_write:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:303    .text.usart_write:00000000 usart_write
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:356    .text.usart_read:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:362    .text.usart_read:00000000 usart_read
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:414    .text.__io_putchar:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:420    .text.__io_putchar:00000000 __io_putchar
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:459    .text.__io_putchar:00000020 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:464    .text.__io_getchar:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:470    .text.__io_getchar:00000000 __io_getchar
C:\Users\LINZHE~1\AppData\Local\Temp\ccP9Vvza.s:494    .text.__io_getchar:00000010 $d

UNDEFINED SYMBOLS
systick_delay_ms
